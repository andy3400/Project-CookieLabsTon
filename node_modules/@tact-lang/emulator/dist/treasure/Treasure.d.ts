import { Address, Cell, Contract, ContractProvider, MessageRelaxed, Sender, SendMode } from "ton-core";
import { KeyPair } from "ton-crypto";
import { Maybe } from "../utils/maybe";
export type Treasure = Sender & {
    address: Address;
};
export declare class TreasureContract implements Contract {
    static create(workchain: number, keypair: KeyPair): TreasureContract;
    readonly address: Address;
    readonly init: {
        code: Cell;
        data: Cell;
    };
    readonly keypair: KeyPair;
    private seqno;
    constructor(workchain: number, keypair: KeyPair);
    send(provider: ContractProvider, src: MessageRelaxed[], sendMode?: SendMode): Promise<void>;
    sender(provider: ContractProvider, address: Address): Treasure;
    /**
     * Create signed transfer
     */
    createTransfer(args: {
        seqno: number;
        messages: MessageRelaxed[];
        sendMode?: Maybe<SendMode>;
    }): Cell;
}
