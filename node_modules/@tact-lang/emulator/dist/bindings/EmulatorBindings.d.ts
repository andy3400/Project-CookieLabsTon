/// <reference types="node" />
import { Address, Cell, TupleItem } from "ton-core";
export type GetMethodArgs = {
    verbosity: number;
    address: Address;
    code: Cell;
    data: Cell;
    balance: bigint;
    unixtime: number;
    randomSeed: Buffer;
    gasLimit: bigint;
    methodId: number;
    args: TupleItem[];
    config: Cell;
};
export type GetMethodResult = {
    logs: string;
    output: {
        success: true;
        stack: string;
        gas_used: string;
        vm_exit_code: number;
        missing_library: string | null;
    } | {
        success: false;
        error: string;
    };
};
export type GetMethodResultInternal = {
    logs: string;
    output: {
        success: true;
        stack: string;
        gas_used: string;
        vm_exit_code: number;
        vm_log: string;
        missing_library: string | null;
    } | {
        success: false;
        error: string;
    };
};
export type TransactionArgs = {
    config: Cell;
    libs: Cell | null;
    verbosity: number;
    shardAccount: Cell;
    message: Cell;
    now: number;
    lt: bigint;
    randomSeed: Buffer;
};
export type TransactionResult = {
    output: {
        success: true;
        transaction: string;
        shard_account: string;
        actions: string | null;
    } | {
        success: false;
        error: string;
    };
    logs: string;
};
export declare class EmulatorBindings {
    #private;
    runGetMethod(args: GetMethodArgs): Promise<GetMethodResult>;
    transaction(args: TransactionArgs): Promise<TransactionResult>;
    private invoke;
    private getModule;
}
